spec:
  inputs:
    stage:
      description: The pipeline stage where to perform the docs release
      default: publish
    runner:
      description: GitLab CI runner tag
      default: hetzner-amd-beefy
---

publish:licenses:
  stage: $[[ inputs.stage ]]
  tags:
    - $[[ inputs.runner ]]
  rules:
    - changes:
        paths: ["**/*"]
        compare_to: $DEFAULT_BRANCH
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: on_success
  image: golang:${GOLANG_VERSION}
  variables:
    GOFLAGS: -tags=nopkcs11
  before_script:
    - go install github.com/google/go-licenses@v1.6.0
  script:
    - go-licenses check --disallowed_types=forbidden,restricted,unknown --ignore=github.com/mendersoftware/mender-gateway ./...
    - go-licenses report --template=./go-licenses.gotpl --ignore=github.com/mendersoftware/mender-gateway ./... > licenses.md
  artifacts:
    when: on_success
    expire_in: "1w"
    paths:
      - licenses.md

publish:licenses:docs-site:
  stage: $[[ inputs.stage ]]
  tags:
    - $[[ inputs.runner ]]
  rules:
    # Only make available for stable branches
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
      allow_failure: true
  image: "registry.gitlab.com/northern.tech/mender/mender-test-containers:release-please-v1-master"
  needs:
    - job: publish:licenses
      artifacts: true
  before_script:
    # Check required environment variables
    - |
      if [ -z "$GITHUB_USER_EMAIL" ] || [ -z "$GITHUB_USER_NAME" ] || [ -z "$GITHUB_BOT_TOKEN_REPO_FULL" ]; then
        echo "ERROR: Missing required environment variables:"
        echo "  - GITHUB_USER_EMAIL: ${GITHUB_USER_EMAIL:-'NOT SET'}"
        echo "  - GITHUB_USER_NAME: ${GITHUB_USER_NAME:-'NOT SET'}"
        echo "  - GITHUB_BOT_TOKEN_REPO_FULL: $([ -z "$GITHUB_BOT_TOKEN_REPO_FULL" ] && echo 'NOT SET' || echo 'SET')"
        exit 1
      fi
    # Setup git configuration
    - git config --global user.email "${GITHUB_USER_EMAIL}"
    - git config --global user.name "${GITHUB_USER_NAME}"
    - export GITHUB_TOKEN=${GITHUB_CLI_TOKEN}
    - git remote add github-${CI_JOB_ID}
      https://${GITHUB_USER_NAME}:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/$[[ inputs.github_repo ]]
      || true  # Ignore already existing remote
    - gh repo set-default
      https://${GITHUB_USER_NAME}:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/$[[ inputs.github_repo ]]
  script:
    - git clone https://${GITHUB_USER_NAME}:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/${GITHUB_DOCS_REPO_URL}
    - cd ${GITHUB_DOCS_REPO_URL#*/}
    - git checkout -b licenses-${CI_JOB_ID}
    - cat ../.licenses_header.md > ${LICENSE_REMOTE_FILE}
    - cat ../.licenses.md >> ${LICENSE_REMOTE_FILE}
    - git add ${LICENSE_REMOTE_FILE}
    - |
      git commit -s -m "chore: add mender-gateway open source licenses"
    - git push origin licenses-${CI_JOB_ID}
    - gh pr create --title "${CI_COMMIT_TAG} Release - update Mender Gateway licenses" --body "Automated change to the Mender Gateway Licenses during ${CI_COMMIT_TAG} release" --base master --head licenses-${CI_JOB_ID}
  after_script:
    - git remote remove licenses-${CI_JOB_ID}
