spec:
  inputs:
    stage:
      description: The pipeline stage where to perform the docs release
      default: publish
    runner:
      description: GitLab CI runner tag
      default: hetzner-amd-beefy
    component:
      description: The component name to update versions for
    github_user_name:
      description: GitHub user name
      default: mender-test-bot
    github_user_email:
      description: GitHub user e-mail address
      default: mender@northern.tech
---

release:mender-docs:
  stage: $[[ inputs.stage ]]
  tags:
    - $[[ inputs.runner ]]
  needs: []
  image:
    name: "registry.gitlab.com/northern.tech/mender/mender-test-containers:release-please-v1-master"
    entrypoint: [""]
  rules:
    # Only on production tags (with or without 'v' prefix)
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
      allow_failure: true
  variables:
    GITHUB_DOCS_REPO_URL: "mendersoftware/mender-docs"
  before_script:
    # Check required environment variables
    - |
      if [ -z "$GITHUB_CLI_TOKEN" ] || [ -z "$GITHUB_BOT_TOKEN_REPO_FULL" ]; then
        echo "ERROR: Missing required environment variables:"
        echo "  - GITHUB_CLI_TOKEN: $([ -z "$GITHUB_CLI_TOKEN" ] && echo 'NOT SET' || echo 'SET')"
        echo "  - GITHUB_BOT_TOKEN_REPO_FULL: $([ -z "$GITHUB_BOT_TOKEN_REPO_FULL" ] && echo 'NOT SET' || echo 'SET')"
        exit 1
      fi
    # Setting up git
    - git config --global user.email "$[[ inputs.github_user_email ]]"
    - git config --global user.name "$[[ inputs.github_user_name ]]"
    # GITHUB_TOKEN for Github cli authentication
    - export GITHUB_TOKEN=${GITHUB_CLI_TOKEN}
  script:
    - git clone https://$[[ inputs.github_user_name ]]:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/${GITHUB_DOCS_REPO_URL}
    - cd ${GITHUB_DOCS_REPO_URL#*/}
    - git checkout -b autoversion-${CI_JOB_ID}
    - python3 ./autoversion.py --update --component $[[ inputs.component ]] --version ${CI_COMMIT_TAG}
    - git add .
    - |
      git commit -s -m "chore: update $[[ inputs.component ]] versions with autoversion"
    - git push origin autoversion-${CI_JOB_ID}
    - gh pr create --title "${CI_COMMIT_TAG} Release - update versions for $[[ inputs.component ]]" --body "Automated change to the $[[ inputs.component ]] versions during ${CI_COMMIT_TAG} release" --base master --head autoversion-${CI_JOB_ID}
